{"version":3,"file":"static/js/778.0bd532d7.chunk.js","mappings":"2UAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAe,mCAAG,+GAEJL,EAASM,IAAI,wBAFT,uBAEnBC,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,sCAK3BC,QAAQC,IAAR,MAL2B,8DAAH,qDAUfC,EAAc,mCAAG,WAAMC,GAAN,kGAEHX,EAASM,IAAI,gBAAiB,CAAEH,OAAQ,CAAEQ,MAAAA,KAFvC,uBAElBJ,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,sCAK1BC,QAAQC,IAAR,MAL0B,8DAAH,sDAUdG,EAAoB,mCAAG,WAAMC,GAAN,kGAETb,EAASM,IAAT,iBAAuBO,IAFd,uBAExBN,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,sCAKhCC,QAAQC,IAAR,MALgC,8DAAH,sDAUpBK,EAAoB,mCAAG,WAAMD,GAAN,kGAETb,EAASM,IAAT,iBAAuBO,EAAvB,aAFS,uBAExBN,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,sCAKhCC,QAAQC,IAAR,MALgC,8DAAH,sDAUpBM,EAAoB,mCAAG,WAAMF,GAAN,kGAETb,EAASM,IAAT,iBAAuBO,EAAvB,aAFS,uBAExBN,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,sCAKhCC,QAAQC,IAAR,MALgC,8DAAH,sDAUpBO,EAAkB,mCAAG,WAAMH,GAAN,kGAEPb,EAASM,IAAT,iBAAuBO,EAAvB,YAFO,uBAEtBN,EAFsB,EAEtBA,KAFsB,kBAGvBA,GAHuB,sCAK9BC,QAAQC,IAAR,MAL8B,8DAAH,qD,+GC1D/B,GAAgB,KAAO,mBAAmB,IAAM,kBAAkB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,oB,SCI9G,SAASQ,EAAT,GAA0D,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACzD,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,OACE,gBAAaC,UAAWC,EAAAA,KAAxB,WACE,gBACED,UAAWC,EAAAA,IACXC,QAAS,SAAAC,GACPJ,GAAS,EACV,EACDK,IACEX,IAAiBK,EAAjB,6CAC0CL,GAD1C,2HAIFY,IAAKV,EACLW,MAAO,QACPC,OAAM,WAER,eAAIP,UAAWC,EAAAA,KAAf,SAA6BN,KAC7B,eAAGK,UAAWC,EAAAA,KAAd,wBAAuCL,OAhBhCF,EAmBZ,CCGc,SAASc,EAAT,GAA0B,IAAVV,EAAS,EAATA,MACrBW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBZ,EAAAA,EAAAA,UAAS,IAAjC,eAAOc,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRxB,EAAAA,EAAAA,IAAqBoB,GAClBK,MAAK,SAAAC,GACJH,EAAQG,EAAOJ,KAChB,IACAK,OAAM,SAAAlB,GAAK,OAAIf,QAAQC,IAAIc,EAAhB,GACf,GAAE,CAACW,KAGF,gBAAIT,UAAWC,EAAAA,KAAf,UACG,IACAU,GACCA,EAAKM,KAAI,gBAAGvB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMF,EAAb,EAAaA,aAAcG,EAA3B,EAA2BA,UAA3B,OACP,SAACJ,EAAD,CAEEG,KAAMA,EACNF,aAAcA,EACdG,UAAWA,EACXE,MAAOA,GAJFJ,EAFA,MAWhB,C","sources":["components/API/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/cast/Cast.module.css?6cbd","components/cast/CastItem.jsx","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '7ef171008597e4d392359a67eba29580',\n  },\n});\n\nexport const fetchTrendMovie = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/week');\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetSearch = async query => {\n  try {\n    const { data } = await instance.get('/search/movie', { params: { query } });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieDetails = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieCredits = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieReviews = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieVideo = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/videos`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Cast_link__6gyDs\",\"img\":\"Cast_img__WXmA+\",\"list\":\"Cast_list__tTjpY\",\"item\":\"Cast_item__rvFp8\",\"desc\":\"Cast_desc__BdBtm\"};","// import { fetchGetMovieCredits } from 'components/API/Api';\nimport { useState } from 'react';\nimport styles from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function CastItem({ profile_path, id, name, character }) {\n  const [error, setError] = useState(false);\n  return (\n    <li key={id} className={styles.item}>\n      <img\n        className={styles.img}\n        onError={e => {\n          setError(true);\n        }}\n        src={\n          profile_path && !error\n            ? `https://image.tmdb.org/t/p/original${profile_path}`\n            : `https://w0.peakpx.com/wallpaper/460/557/HD-wallpaper-black-tree-alone-amazing-balck-empty-frases-lonely-new-sad-tree.jpg`\n        }\n        alt={name}\n        width={'200px'}\n        height={`300px`}\n      />\n      <h3 className={styles.name}>{name}</h3>\n      <p className={styles.desc}>Character: {character}</p>\n    </li>\n  );\n}\nCastItem.propTypes = {\n  id: PropTypes.number,\n  profile_path: PropTypes.string,\n  character: PropTypes.string,\n  error: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGetMovieCredits } from 'components/API/Api';\nimport CastItem from './CastItem';\nimport PropTypes from 'prop-types';\nimport styles from './Cast.module.css';\n\n// export default function CastItem({ cast }) {\n//   const [error, setError] = useState(false);\n//   return (\n\n//     <li key={id}>\n//       <img\n//         className={styles.img}\n//         onError={(e) => {\n//           setError(true);\n//         }}\n//         src={\n//           profile_path && !error\n//             ? `https://image.tmdb.org/t/p/original${profile_path}`\n//             : `https://www.peakpx.com/en/hd-wallpaper-desktop-pbxaj`\n//         }\n//         alt={name}\n//         width={'400px'}\n//       />\n//       <h3 className={styles.name}>{name}</h3>\n//       <p className={styles.desc}>Character: {character}</p>\n//     </li>\n// )}\n\nexport default function Cast({ error }) {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchGetMovieCredits(movieId)\n      .then(result => {\n        setCast(result.cast);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <ul className={styles.list}>\n      {' '}\n      {cast &&\n        cast.map(({ id, name, profile_path, character }) => (\n          <CastItem\n            key={id}\n            name={name}\n            profile_path={profile_path}\n            character={character}\n            error={error}\n          />\n        ))}\n    </ul>\n  );\n}\n\nCast.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  profile_path: PropTypes.string,\n  character: PropTypes.string,\n  error: PropTypes.string,\n};\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrendMovie","get","data","console","log","fetchGetSearch","query","fetchGetMovieDetails","movie_id","fetchGetMovieCredits","fetchGetMovieReviews","fetchGetMovieVideo","CastItem","profile_path","id","name","character","useState","error","setError","className","styles","onError","e","src","alt","width","height","Cast","movieId","useParams","cast","setCast","useEffect","then","result","catch","map"],"sourceRoot":""}