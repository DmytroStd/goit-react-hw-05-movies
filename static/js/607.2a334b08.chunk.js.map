{"version":3,"file":"static/js/607.2a334b08.chunk.js","mappings":"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","sources":["components/API/Api.jsx","components/moviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/searchBar/SearchBar.module.css?1f80","components/searchBar/SearchBar.jsx","pages/Movies.jsx","webpack://goit-react-hw-05-movies/./src/components/moviesList/MoviesList.module.css?a81a"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '7ef171008597e4d392359a67eba29580',\n  },\n});\n\nexport const fetchTrendMovie = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/week');\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetSearch = async query => {\n  try {\n    const { data } = await instance.get('/search/movie', { params: { query } });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieDetails = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieCredits = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieReviews = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieVideo = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/videos`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.list}>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id} className={styles.item}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              <img\n                className={styles.img}\n                src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n                alt={movie.original_title}\n                width={200}\n                height={300}\n              />\n\n              <span className={styles.title}>{movie.title}</span>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  id: PropTypes.number,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__vy24d\",\"searchButton\":\"SearchBar_searchButton__6Z21H\",\"searchInput\":\"SearchBar_searchInput__dQo6X\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchGetSearch } from '../API/Api';\nimport MovieList from '../moviesList/MoviesList';\nimport Notiflix from 'notiflix';\nimport styles from './SearchBar.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function SearchBar() {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (search?.trim() === '') {\n      return Notiflix.Notify.warning('please, enter valid movie name');\n    }\n    const form = e.currentTarget;\n    setSearchParams({ search: form.elements.search.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (search) {\n      fetchGetSearch(search)\n        .then(data => setMovies(data.results))\n        .catch(error => console.log(error));\n    }\n  }, [search]);\n\n  return (\n    <>\n      <div className={styles.searchbar}>\n        <form className={styles.searchForm} onSubmit={handleSubmit}>\n          <label className={styles.label}>\n            <button type=\"submit\" className={styles.searchButton}>\n              <span className={styles.searchFormButtonLabel}>search</span>\n            </button>\n\n            <input\n              className={styles.searchInput}\n              type=\"text\"\n              autoComplete=\"off\"\n              name=\"search\"\n              autoFocus\n              placeholder=\"search movies\"\n            />\n          </label>\n        </form>\n      </div>\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n}\n\nSearchBar.propType = {\n  fetchGetSearch: PropTypes.func,\n};\n","import SearchBar from 'components/searchBar/SearchBar';\n\nexport default function Movies(handleSubmit) {\n  return (\n    <div>\n      <SearchBar handleSubmit={handleSubmit} />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__7suCE\",\"img\":\"MoviesList_img__XDovE\",\"heroTitle\":\"MoviesList_heroTitle__sNXhY\",\"title\":\"MoviesList_title__H7wjx\",\"item\":\"MoviesList_item__vmUfl\",\"desc\":\"MoviesList_desc__AVMKb\",\"link\":\"MoviesList_link__KTkq2\",\"addInfo\":\"MoviesList_addInfo__yZPhF\",\"first\":\"MoviesList_first__K8TXE\",\"secondaryTitle\":\"MoviesList_secondaryTitle__wM62Y\",\"addBox\":\"MoviesList_addBox__5-5W8\",\"active\":\"MoviesList_active__rbBeu\"};"],"names":["instance","axios","baseURL","params","api_key","fetchTrendMovie","get","data","console","log","fetchGetSearch","query","fetchGetMovieDetails","movie_id","fetchGetMovieCredits","fetchGetMovieReviews","fetchGetMovieVideo","MovieList","movies","location","useLocation","className","styles","map","movie","state","from","to","id","src","poster_path","alt","original_title","width","height","title","SearchBar","useState","setMovies","useSearchParams","searchParams","setSearchParams","search","useEffect","then","results","catch","error","onSubmit","e","preventDefault","trim","Notiflix","form","currentTarget","elements","value","reset","type","autoComplete","name","autoFocus","placeholder","Movies","handleSubmit","propType","PropTypes"],"sourceRoot":""}