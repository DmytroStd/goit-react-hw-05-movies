{"version":3,"file":"static/js/271.2aafa583.chunk.js","mappings":"2UAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAe,mCAAG,+GAEJL,EAASM,IAAI,wBAFT,uBAEnBC,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,sCAK3BC,QAAQC,IAAR,MAL2B,8DAAH,qDAUfC,EAAc,mCAAG,WAAMC,GAAN,kGAEHX,EAASM,IAAI,gBAAiB,CAAEH,OAAQ,CAAEQ,MAAAA,KAFvC,uBAElBJ,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,sCAK1BC,QAAQC,IAAR,MAL0B,8DAAH,sDAUdG,EAAoB,mCAAG,WAAMC,GAAN,kGAETb,EAASM,IAAT,iBAAuBO,IAFd,uBAExBN,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,sCAKhCC,QAAQC,IAAR,MALgC,8DAAH,sDAUpBK,EAAoB,mCAAG,WAAMD,GAAN,kGAETb,EAASM,IAAT,iBAAuBO,EAAvB,aAFS,uBAExBN,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,sCAKhCC,QAAQC,IAAR,MALgC,8DAAH,sDAUpBM,EAAoB,mCAAG,WAAMF,GAAN,kGAETb,EAASM,IAAT,iBAAuBO,EAAvB,aAFS,uBAExBN,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,sCAKhCC,QAAQC,IAAR,MALgC,8DAAH,sDAUpBO,EAAkB,mCAAG,WAAMH,GAAN,kGAEPb,EAASM,IAAT,iBAAuBO,EAAvB,YAFO,uBAEtBN,EAFsB,EAEtBA,KAFsB,kBAGvBA,GAHuB,sCAK9BC,QAAQC,IAAR,MAL8B,8DAAH,qD,+GC1D/B,GAAgB,OAAS,4BAA4B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,2B,SCK/G,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAqBG,GAClBM,MAAK,SAAAC,GACJH,EAAWG,EAAOC,QACnB,IACAC,OAAM,SAAAC,GAAK,OAAIpB,QAAQC,IAAImB,EAAhB,GACf,GAAE,CAACV,EAASG,IAGXA,IACE,eAAIQ,UAAWC,EAAAA,KAAf,SACGT,EAAQU,OAAS,EAChBV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,gBAAaN,UAAWC,EAAAA,KAAxB,WACE,cAAGD,UAAWC,EAAAA,OAAd,SAA8BI,KAC9B,cAAGL,UAAWC,EAAAA,KAAd,SAA4BK,MAFrBF,EADC,KAOZ,cAAGJ,UAAWC,EAAAA,MAAd,0DAOT,C","sources":["components/API/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/reviews/ReviewsItem.module.css?4003","components/reviews/ReviewsItem.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '7ef171008597e4d392359a67eba29580',\n  },\n});\n\nexport const fetchTrendMovie = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/week');\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetSearch = async query => {\n  try {\n    const { data } = await instance.get('/search/movie', { params: { query } });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieDetails = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieCredits = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieReviews = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const fetchGetMovieVideo = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/videos`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"author\":\"ReviewsItem_author__LIFR5\",\"text\":\"ReviewsItem_text__zeMjd\",\"list\":\"ReviewsItem_list__b7ISQ\",\"item\":\"ReviewsItem_item__1r7TH\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGetMovieReviews } from 'components/API/Api';\nimport PropTypes from 'prop-types';\nimport styles from './ReviewsItem.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchGetMovieReviews(movieId)\n      .then(result => {\n        setReviews(result.results);\n      })\n      .catch(error => console.log(error));\n  }, [movieId, reviews]);\n\n  return (\n    reviews && (\n      <ul className={styles.list}>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id} className={styles.item}>\n              <p className={styles.author}>{author}</p>\n              <p className={styles.text}>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p className={styles.error}>\n            Sorry, there is no reviews about this movie\n          </p>\n        )}\n      </ul>\n    )\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrendMovie","get","data","console","log","fetchGetSearch","query","fetchGetMovieDetails","movie_id","fetchGetMovieCredits","fetchGetMovieReviews","fetchGetMovieVideo","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","result","results","catch","error","className","styles","length","map","id","author","content"],"sourceRoot":""}